{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "certGenerator": {
      "description": "The certGenerator section contains the configuration for the cert-generator Job.",
      "properties": {
        "affinity": {
          "description": "The affinity of the cert-generator pod.",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "agentTLSSecretName": {
          "default": "agent-tls",
          "description": "The name of the base Secret containing TLS CA, certificate, and key for the NGINX Agent to securely\ncommunicate with the NGINX Gateway Fabric control plane. Must exist in the same namespace that the\nNGINX Gateway Fabric control plane is running in (default namespace: nginx-gateway).",
          "required": [],
          "title": "agentTLSSecretName",
          "type": "string"
        },
        "annotations": {
          "description": "The annotations of the cert-generator Job.",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "nodeSelector": {
          "description": "The nodeSelector of the cert-generator pod.",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "overwrite": {
          "default": false,
          "description": "Overwrite existing TLS Secrets on startup.",
          "required": [],
          "title": "overwrite",
          "type": "boolean"
        },
        "serverTLSSecretName": {
          "default": "server-tls",
          "description": "The name of the Secret containing TLS CA, certificate, and key for the NGINX Gateway Fabric control plane\nto securely communicate with the NGINX Agent. Must exist in the same namespace that the NGINX Gateway Fabric\ncontrol plane is running in (default namespace: nginx-gateway).",
          "required": [],
          "title": "serverTLSSecretName",
          "type": "string"
        },
        "tolerations": {
          "description": "Tolerations for the cert-generator pod.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "The topology spread constraints for the cert-generator pod.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        },
        "ttlSecondsAfterFinished": {
          "default": 30,
          "description": "How long to wait after the cert generator job has finished before it is removed by the job controller.",
          "required": [],
          "title": "ttlSecondsAfterFinished",
          "type": "integer"
        }
      },
      "required": [],
      "title": "certGenerator",
      "type": "object"
    },
    "clusterDomain": {
      "default": "cluster.local",
      "description": "The DNS cluster domain of your Kubernetes cluster.",
      "required": [],
      "title": "clusterDomain",
      "type": "string"
    },
    "gateways": {
      "description": "A list of Gateway objects. View https://gateway-api.sigs.k8s.io/reference/spec/#gateway for full Gateway reference.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "gateways",
      "type": "array"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "nginx": {
      "description": "The nginx section contains the configuration for all NGINX data plane deployments\ninstalled by the NGINX Gateway Fabric control plane.",
      "properties": {
        "autoscaling": {
          "description": "Autoscaling configuration for the NGINX data plane.",
          "properties": {
            "enable": {
              "default": false,
              "description": "Enable or disable Horizontal Pod Autoscaler for the NGINX data plane.",
              "required": [],
              "title": "enable",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "config": {
          "description": "The configuration for the data plane that is contained in the NginxProxy resource. This is applied globally to all Gateways\nmanaged by this instance of NGINX Gateway Fabric.",
          "properties": {
            "disableHTTP2": {
              "description": "DisableHTTP2 defines if http2 should be disabled for all servers.",
              "required": [],
              "type": "boolean"
            },
            "disableSNIHostValidation": {
              "description": "DisableSNIHostValidation disables the validation that ensures the SNI hostname matches the Host header in HTTPS requests. This resolves HTTP/2 connection coalescing issues with wildcard certificates but introduces security risks as described in Gateway API GEP-3567.",
              "required": [],
              "type": "boolean"
            },
            "ipFamily": {
              "description": "IPFamily specifies the IP family to be used by the NGINX.",
              "enum": [
                "ipv4",
                "ipv6",
                "dual"
              ],
              "required": [],
              "type": "string"
            },
            "logging": {
              "description": "Logging defines logging related settings for NGINX.",
              "properties": {
                "agentLevel": {
                  "enum": [
                    "debug",
                    "info",
                    "error",
                    "panic",
                    "fatal"
                  ],
                  "required": [],
                  "type": "string"
                },
                "errorLevel": {
                  "enum": [
                    "debug",
                    "info",
                    "notice",
                    "warn",
                    "error",
                    "crit",
                    "alert",
                    "emerg"
                  ],
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            },
            "metrics": {
              "description": "Metrics defines the configuration for Prometheus scraping metrics.",
              "properties": {
                "disable": {
                  "required": [],
                  "type": "boolean"
                },
                "port": {
                  "maximum": 65535,
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "type": "object"
            },
            "nginxPlus": {
              "description": "NginxPlus specifies NGINX Plus additional settings.",
              "properties": {
                "allowedAddresses": {
                  "items": {
                    "properties": {
                      "type": {
                        "enum": [
                          "CIDR",
                          "IPAddress"
                        ],
                        "required": [],
                        "type": "string"
                      },
                      "value": {
                        "required": [],
                        "type": "string"
                      }
                    },
                    "required": []
                  },
                  "required": [],
                  "type": "array"
                }
              },
              "required": [],
              "type": "object"
            },
            "rewriteClientIP": {
              "description": "RewriteClientIP defines configuration for rewriting the client IP to the original client's IP.",
              "properties": {
                "mode": {
                  "enum": [
                    "ProxyProtocol",
                    "XForwardedFor"
                  ],
                  "required": [],
                  "type": "string"
                },
                "setIPRecursively": {
                  "required": [],
                  "type": "boolean"
                },
                "trustedAddresses": {
                  "items": {
                    "properties": {
                      "type": {
                        "enum": [
                          "CIDR",
                          "IPAddress",
                          "Hostname"
                        ],
                        "required": [],
                        "type": "string"
                      },
                      "value": {
                        "required": [],
                        "type": "string"
                      }
                    },
                    "required": []
                  },
                  "required": [],
                  "type": "array"
                }
              },
              "required": [],
              "type": "object"
            },
            "telemetry": {
              "description": "Telemetry specifies the OpenTelemetry configuration.",
              "properties": {
                "disabledFeatures": {
                  "items": {
                    "enum": [
                      "DisableTracing"
                    ],
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "type": "array"
                },
                "exporter": {
                  "properties": {
                    "batchCount": {
                      "minimum": 0,
                      "required": [],
                      "type": "integer"
                    },
                    "batchSize": {
                      "minimum": 0,
                      "required": [],
                      "type": "integer"
                    },
                    "endpoint": {
                      "pattern": "^(?:http?:\\/\\/)?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*(?::\\d{1,5})?$",
                      "required": [],
                      "type": "string"
                    },
                    "interval": {
                      "pattern": "^\\d{1,4}(ms|s)?$",
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "serviceName": {
                  "pattern": "^[a-zA-Z0-9_-]+$",
                  "required": [],
                  "type": "string"
                },
                "spanAttributes": {
                  "items": {
                    "properties": {
                      "key": {
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "^([^\"$\\\\]|\\\\[^$])*$",
                        "required": [],
                        "type": "string"
                      },
                      "value": {
                        "maxLength": 255,
                        "minLength": 1,
                        "pattern": "^([^\"$\\\\]|\\\\[^$])*$",
                        "required": [],
                        "type": "string"
                      }
                    },
                    "required": []
                  },
                  "required": [],
                  "type": "array"
                }
              },
              "required": [],
              "type": "object"
            },
            "workerConnections": {
              "description": "The number of worker connections for NGINX. Default is 1024.",
              "maximum": 65535,
              "minimum": 1,
              "required": [],
              "type": "integer"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "container": {
          "description": "The container configuration for the NGINX container. This is applied globally to all Gateways managed by this\ninstance of NGINX Gateway Fabric.",
          "properties": {
            "hostPorts": {
              "description": "A list of HostPorts to expose on the host.\nThis configuration allows containers to bind to a specific port on the host node,\nenabling external network traffic to reach the container directly through the host's IP address and port.\nUse this option when you need to expose container ports on the host for direct access,\nsuch as for debugging, legacy integrations, or when NodePort/LoadBalancer services are not suitable.\nNote: Using hostPort may have security and scheduling implications, as it ties pods to specific nodes and ports.",
              "items": {
                "properties": {
                  "containerPort": {
                    "maximum": 65535,
                    "minimum": 1,
                    "required": [],
                    "type": "integer"
                  },
                  "port": {
                    "maximum": 65535,
                    "minimum": 1,
                    "required": [],
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "hostPorts",
              "type": "array"
            },
            "lifecycle": {
              "description": "The lifecycle of the NGINX container.",
              "required": [],
              "title": "lifecycle",
              "type": "object"
            },
            "readinessProbe": {
              "description": "# -- Defines the settings for the data plane readiness probe. This probe returns Ready when the NGINX data plane is ready to serve traffic.",
              "required": [],
              "title": "readinessProbe",
              "type": "object"
            },
            "resources": {
              "description": "The resource requirements of the NGINX container. You should set this value if you want to use dataplane Autoscaling(HPA).",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "volumeMounts": {
              "description": "volumeMounts are the additional volume mounts for the NGINX container.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumeMounts",
              "type": "array"
            }
          },
          "required": [],
          "title": "container",
          "type": "object"
        },
        "debug": {
          "default": false,
          "description": "Enable debugging for NGINX. Uses the nginx-debug binary. The NGINX error log level should be set to debug in the NginxProxy resource.",
          "required": [],
          "title": "debug",
          "type": "boolean"
        },
        "image": {
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repository": {
              "default": "ghcr.io/nginx/nginx-gateway-fabric/nginx",
              "description": "The NGINX image to use.",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "2.1.1",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "imagePullSecret": {
          "default": "",
          "description": "The name of the secret containing docker registry credentials.\nSecret must exist in the same namespace as the helm release. The control\nplane will copy this secret into any namespace where NGINX is deployed.",
          "required": [],
          "title": "imagePullSecret",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "A list of secret names containing docker registry credentials.\nSecrets must exist in the same namespace as the helm release. The control\nplane will copy these secrets into any namespace where NGINX is deployed.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "kind": {
          "default": "deployment",
          "description": "The kind of NGINX deployment.",
          "enum": [
            "deployment",
            "daemonSet"
          ],
          "required": [],
          "title": "kind"
        },
        "nginxOneConsole": {
          "description": "Configuration for NGINX One Console.",
          "properties": {
            "dataplaneKeySecretName": {
              "default": "",
              "description": "Name of the secret which holds the dataplane key that is required to authenticate with the NGINX One Console.\nSecret must exist in the same namespace that the NGINX Gateway Fabric control plane is running in\n(default namespace: nginx-gateway).",
              "required": [],
              "title": "dataplaneKeySecretName",
              "type": "string"
            },
            "endpointHost": {
              "default": "agent.connect.nginx.com",
              "description": "The Endpoint host that the NGINX One Console telemetry metrics will be sent to.",
              "required": [],
              "title": "endpointHost",
              "type": "string"
            },
            "endpointPort": {
              "default": 443,
              "description": "The endpoint port that the NGINX One Console telemetry metrics will be sent to.",
              "maximum": 65535,
              "minimum": 1,
              "required": [],
              "title": "endpointPort",
              "type": "integer"
            },
            "skipVerify": {
              "default": false,
              "description": "Skip TLS verification for NGINX One Console connections.",
              "required": [],
              "title": "skipVerify",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "nginxOneConsole",
          "type": "object"
        },
        "patches": {
          "description": "Custom patches to apply to the NGINX Deployment/DaemonSet.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "patches",
          "type": "array"
        },
        "plus": {
          "default": false,
          "description": "Is NGINX Plus image being used.",
          "required": [],
          "title": "plus",
          "type": "boolean"
        },
        "pod": {
          "description": "The pod configuration for the NGINX data plane pod. This is applied globally to all Gateways managed by this\ninstance of NGINX Gateway Fabric.",
          "required": [],
          "title": "pod",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "The number of replicas of the NGINX Deployment. This value is ignored if autoscaling.enable is true.",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "service": {
          "description": "The service configuration for the NGINX data plane. This is applied globally to all Gateways managed by this\ninstance of NGINX Gateway Fabric.",
          "properties": {
            "externalTrafficPolicy": {
              "default": "Local",
              "description": "The externalTrafficPolicy of the service. The value Local preserves the client source IP.",
              "enum": [
                "Cluster",
                "Local"
              ],
              "required": [],
              "title": "externalTrafficPolicy"
            },
            "loadBalancerClass": {
              "default": "",
              "description": "LoadBalancerClass is the class of the load balancer implementation this Service belongs to.\nRequires nginx.service.type set to LoadBalancer.",
              "required": [],
              "title": "loadBalancerClass",
              "type": "string"
            },
            "loadBalancerIP": {
              "default": "",
              "description": "The static IP address for the load balancer. Requires nginx.service.type set to LoadBalancer.",
              "required": [],
              "title": "loadBalancerIP",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "The IP ranges (CIDR) that are allowed to access the load balancer. Requires nginx.service.type set to LoadBalancer.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "loadBalancerSourceRanges",
              "type": "array"
            },
            "nodePorts": {
              "description": "A list of NodePorts to expose on the NGINX data plane service. Each NodePort MUST map to a Gateway listener port,\notherwise it will be ignored. The default NodePort range enforced by Kubernetes is 30000-32767.",
              "items": {
                "properties": {
                  "listenerPort": {
                    "maximum": 65535,
                    "minimum": 1,
                    "required": [],
                    "type": "integer"
                  },
                  "port": {
                    "maximum": 65535,
                    "minimum": 1,
                    "required": [],
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "nodePorts",
              "type": "array"
            },
            "patches": {
              "description": "Custom patches to apply to the NGINX Service.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "patches",
              "type": "array"
            },
            "type": {
              "default": "LoadBalancer",
              "description": "The type of service to create for the NGINX data plane.",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ],
              "required": [],
              "title": "type"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "usage": {
          "description": "Configuration for NGINX Plus usage reporting.",
          "properties": {
            "caSecretName": {
              "default": "",
              "description": "The name of the Secret containing the NGINX Instance Manager CA certificate.\nMust exist in the same namespace that the NGINX Gateway Fabric control plane is running in (default namespace: nginx-gateway).",
              "required": [],
              "title": "caSecretName",
              "type": "string"
            },
            "clientSSLSecretName": {
              "default": "",
              "description": "The name of the Secret containing the client certificate and key for authenticating with NGINX Instance Manager.\nMust exist in the same namespace that the NGINX Gateway Fabric control plane is running in (default namespace: nginx-gateway).",
              "required": [],
              "title": "clientSSLSecretName",
              "type": "string"
            },
            "endpoint": {
              "default": "",
              "description": "The endpoint of the NGINX Plus usage reporting server. Default: product.connect.nginx.com",
              "required": [],
              "title": "endpoint",
              "type": "string"
            },
            "resolver": {
              "default": "",
              "description": "The nameserver used to resolve the NGINX Plus usage reporting endpoint. Used with NGINX Instance Manager.",
              "required": [],
              "title": "resolver",
              "type": "string"
            },
            "secretName": {
              "default": "nplus-license",
              "description": "The name of the Secret containing the JWT for NGINX Plus usage reporting. Must exist in the same namespace\nthat the NGINX Gateway Fabric control plane is running in (default namespace: nginx-gateway).",
              "required": [],
              "title": "secretName",
              "type": "string"
            },
            "skipVerify": {
              "default": false,
              "description": "Disable client verification of the NGINX Plus usage reporting server certificate.",
              "required": [],
              "title": "skipVerify",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "usage",
          "type": "object"
        }
      },
      "required": [],
      "title": "nginx",
      "type": "object"
    },
    "nginxGateway": {
      "description": "The nginxGateway section contains configuration for the NGINX Gateway Fabric control plane deployment.",
      "properties": {
        "affinity": {
          "description": "The affinity of the NGINX Gateway Fabric control plane pod.",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "autoscaling": {
          "description": "Autoscaling configuration for the NGINX Gateway Fabric control plane.",
          "properties": {
            "enable": {
              "default": false,
              "description": "Enable or disable Horizontal Pod Autoscaler for the control plane.",
              "required": [],
              "title": "enable",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "config": {
          "description": "The dynamic configuration for the control plane that is contained in the NginxGateway resource.",
          "properties": {
            "logging": {
              "properties": {
                "level": {
                  "default": "info",
                  "description": "Log level.",
                  "enum": [
                    "info",
                    "debug",
                    "error"
                  ],
                  "required": [],
                  "title": "level"
                }
              },
              "required": [],
              "title": "logging",
              "type": "object"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "configAnnotations": {
          "description": "Set of custom annotations for NginxGateway objects.",
          "required": [],
          "title": "configAnnotations",
          "type": "object"
        },
        "extraVolumeMounts": {
          "description": "extraVolumeMounts are the additional volume mounts for the nginx-gateway container.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "extraVolumes for the NGINX Gateway Fabric control plane pod. Use in conjunction with\nnginxGateway.extraVolumeMounts mount additional volumes to the container.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "gatewayClassAnnotations": {
          "description": "Set of custom annotations for GatewayClass objects.",
          "required": [],
          "title": "gatewayClassAnnotations",
          "type": "object"
        },
        "gatewayClassName": {
          "default": "nginx",
          "description": "The name of the GatewayClass that will be created as part of this release. Every NGINX Gateway\nFabric must have a unique corresponding GatewayClass resource. NGINX Gateway Fabric only processes resources that\nbelong to its class - i.e. have the \"gatewayClassName\" field resource equal to the class.",
          "required": [],
          "title": "gatewayClassName",
          "type": "string"
        },
        "gatewayControllerName": {
          "default": "gateway.nginx.org/nginx-gateway-controller",
          "description": "The name of the Gateway controller. The controller name must be of the form: DOMAIN/PATH. The controller's domain\nis gateway.nginx.org.",
          "pattern": "^gateway.nginx.org/.*",
          "required": [],
          "title": "gatewayControllerName"
        },
        "gwAPIExperimentalFeatures": {
          "properties": {
            "enable": {
              "default": false,
              "description": "Enable the experimental features of Gateway API which are supported by NGINX Gateway Fabric. Requires the Gateway\nAPIs installed from the experimental channel.",
              "required": [],
              "title": "enable",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "gwAPIExperimentalFeatures",
          "type": "object"
        },
        "image": {
          "description": "The image configuration for the NGINX Gateway Fabric control plane.",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repository": {
              "default": "ghcr.io/nginx/nginx-gateway-fabric",
              "description": "The NGINX Gateway Fabric image to use",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "2.1.1",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "kind": {
          "const": "deployment",
          "default": "deployment",
          "description": "The kind of the NGINX Gateway Fabric installation - currently, only deployment is supported.",
          "required": [],
          "title": "kind"
        },
        "labels": {
          "description": "Set of labels to be added for NGINX Gateway Fabric deployment.",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "leaderElection": {
          "description": "The configuration for leader election.",
          "properties": {
            "enable": {
              "default": true,
              "description": "Enable leader election. Leader election is used to avoid multiple replicas of the NGINX Gateway Fabric\nreporting the status of the Gateway API resources. If not enabled, all replicas of NGINX Gateway Fabric\nwill update the statuses of the Gateway API resources.",
              "required": [],
              "title": "enable",
              "type": "boolean"
            },
            "lockName": {
              "default": "",
              "description": "The name of the leader election lock. A Lease object with this name will be created in the same Namespace as\nthe controller.",
              "required": [],
              "title": "lockName",
              "type": "string"
            }
          },
          "required": [],
          "title": "leaderElection",
          "type": "object"
        },
        "lifecycle": {
          "description": "The lifecycle of the nginx-gateway container.",
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "metrics": {
          "properties": {
            "enable": {
              "default": true,
              "description": "Enable exposing metrics in the Prometheus format.",
              "required": [],
              "title": "enable",
              "type": "boolean"
            },
            "port": {
              "default": 9113,
              "description": "Set the port where the Prometheus metrics are exposed.",
              "maximum": 65535,
              "minimum": 1,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "secure": {
              "default": false,
              "description": "Enable serving metrics via https. By default metrics are served via http.\nPlease note that this endpoint will be secured with a self-signed certificate.",
              "required": [],
              "title": "secure",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        },
        "name": {
          "default": "",
          "description": "The name of the NGINX Gateway Fabric deployment - if not present, then by default uses release name given during installation.",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "nodeSelector": {
          "description": "The nodeSelector of the NGINX Gateway Fabric control plane pod.",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "podAnnotations": {
          "description": "Set of custom annotations for the NGINX Gateway Fabric pods.",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "productTelemetry": {
          "properties": {
            "enable": {
              "default": true,
              "description": "Enable the collection of product telemetry.",
              "required": [],
              "title": "enable",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "productTelemetry",
          "type": "object"
        },
        "readinessProbe": {
          "description": "# Defines the settings for the control plane readiness probe. This probe returns Ready when the controller\n# has started and is ready to configure NGINX.",
          "properties": {
            "enable": {
              "default": true,
              "description": "Enable the /readyz endpoint on the control plane.",
              "required": [],
              "title": "enable",
              "type": "boolean"
            },
            "initialDelaySeconds": {
              "default": 3,
              "description": "The number of seconds after the Pod has started before the readiness probes are initiated.",
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "port": {
              "default": 8081,
              "description": "Port in which the readiness endpoint is exposed.",
              "maximum": 65535,
              "minimum": 1,
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "The number of replicas of the NGINX Gateway Fabric Deployment. This value is ignored if autoscaling.enable is true.",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "description": "The resource requests and/or limits of the nginx-gateway container.",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "description": "The service configuration for the NGINX Gateway Fabric control plane.",
          "properties": {
            "annotations": {
              "description": "The annotations of the NGINX Gateway Fabric control plane service.",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "description": "The labels of the NGINX Gateway Fabric control plane service.",
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "description": "The serviceaccount configuration for the NGINX Gateway Fabric control plane.",
          "properties": {
            "annotations": {
              "description": "Set of custom annotations for the NGINX Gateway Fabric control plane service account.",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "imagePullSecret": {
              "default": "",
              "description": "The name of the secret containing docker registry credentials for the control plane.\nSecret must exist in the same namespace as the helm release.",
              "required": [],
              "title": "imagePullSecret",
              "type": "string"
            },
            "imagePullSecrets": {
              "description": "A list of secret names containing docker registry credentials for the control plane.\nSecrets must exist in the same namespace as the helm release.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "imagePullSecrets",
              "type": "array"
            },
            "name": {
              "default": "",
              "description": "The name of the service account of the NGINX Gateway Fabric control plane pods. Used for RBAC.",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "snippetsFilters": {
          "properties": {
            "enable": {
              "default": false,
              "description": "Enable SnippetsFilters feature. SnippetsFilters allow inserting NGINX configuration into the generated NGINX\nconfig for HTTPRoute and GRPCRoute resources.",
              "required": [],
              "title": "enable",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "snippetsFilters",
          "type": "object"
        },
        "terminationGracePeriodSeconds": {
          "default": 30,
          "description": "The termination grace period of the NGINX Gateway Fabric control plane pod.",
          "required": [],
          "title": "terminationGracePeriodSeconds",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations for the NGINX Gateway Fabric control plane pod.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "The topology spread constraints for the NGINX Gateway Fabric control plane pod.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [
        "gatewayClassName",
        "gatewayControllerName"
      ],
      "title": "nginxGateway",
      "type": "object"
    }
  },
  "required": [],
  "type": "object"
}
